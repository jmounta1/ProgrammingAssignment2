install.packages("swirl")
library(swirl)
swirl()
find.package("swirl")
package_version("swirl")
packageVersion("swirl")
library("swirl")
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c<0,10
c(1,2,3,4) + c(0.10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
rm(list=ls())
x <- 9
dir()
?dir
args(list.files)
old.dir <- getwd()
testdir <- dir.create()
dir.create(testdir)
testdir <- dir.create(getwd())
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
dir()
getwd()
ls()
?ls
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path(mytest3.R"")
file.path("mytest3.R")
?file.path
file.path("folder1", "folder2", "mytest3.R")
file.path("folder1", "folder2")
?dir.create
?file.path
dir.create(file.path("testdir2", "testdir3"), recursive = T)
?dir.create
?file.path
play()
getwd()
dir()
setwd("testdir2")
dir()
setwd("testdir")
setwd()
?setwd
getwd()
setwd(~)
setwd(~)
setwd("~")
dir()
setwd("testdir")
dir()
dir.create(file.path("test3", "test4"), recursive = T)
dir()
setwd("test3")
dir()
setwd("~/testdir")
dir()
?rm
rm("test3")
dir()
unlink("test3", recursive = T)
dir()
nxt()
play()
dir()
unlink("testdir2", recursive = T)
nxt()
dir.create(file.path('testdir2', 'testdir3'), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
?along.with
seq()
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2) times = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
print(tf)
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Jack")
my_name
paste(my_name, collapse = " ")
paster("Hello", "world!" , sep = " ")
paste("Hello", "world!" , sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
print(R.version.string)
library(datasets)
data(iris)
?iris
colMeans(iris, na.rm = TRUE)
iris
f <- c(rep('setosa',50),rep(versicolor,50),rep('virginica',50))
f <- c(rep('setosa',50),rep('versicolor',50),rep('virginica',50))
x <- split(iris,f)
x
mean(x$virginica$Sepal.Length)
apply(iris,2,mean)
apply(iris([ ,1:4]), 1, mean)
apply(iris[ ,1:4], 1, mean)
apply(iris[ ,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
y <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
y[1] - y[3]
debug(ls)
n
n
n
n
n
n
n
n
n
ls
ls()
ls
ls()
library(datasets)
data(mtcars)
mtcars
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
menan()
nn
nnn
Q
n
n
n
n
n
n
n
n
n
mtcars
library(datasets)
data(mtcars)
mtcars
?with
z <- tapply(mtcars$mpg,mtcars$cyl,mean)
z
abs(z[4]-z[8])
z[4]-z[8]
sapply(split(mtcars$mpg,mtcars$cyl),mean)
z <- sapply(split(mtcars$mpg,mtcars$cyl),mean)
z
abs(z[4]-z[8])
abs(z[1]-z[3])
z <- sapply(split(mtcars$hp,mtcars$cyl),mean)
abs(z[1]-z[3])
z
abs(z[1]-z[3])
lapply(mtcars,mean)
apply(mtcars,2,mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars(tapply(mpg,cyl,mean)))
with(mtcars, tapply(mpg,cyl,mean))
dir()
setwd('programmingassignment2')
source('makeVector.R')
source('cachemean.R')
makeVector(c(4,5,6,7))
z <- c(4,5,6,7)
makeVector(z)
cachemean(z)
vec <- makeVector(z)
zz <- cachemean(vec)
zz
cachemean(vc)
cachemean(vec)
View('cachemean.r')
?open
open('cachemean.r')
file('cachemean.r')
file('cachemean.r', open = T)
file('cachemean.r', open = 'r+')
file('cachemean.r', open = 'r')
file('cachemean.r', open = r)
file('cachemean.r', open = 'rt')
